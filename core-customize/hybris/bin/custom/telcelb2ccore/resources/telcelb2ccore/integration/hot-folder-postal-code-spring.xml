<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <bean id="baseDirectoryTelcelPC" class="java.lang.String">
        <constructor-arg value="#{baseDirectory}/telcel/postalcodes"/>
    </bean>

    <!-- 1) Scan for files -->
    <file:inbound-channel-adapter id="batchFilesTelcel" directory="#{baseDirectoryTelcelPC}"
                                  filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator"
                                  auto-startup="#{configurationService.configuration.getProperty('hotfolder.inbound.enabled')}">
        <int:poller fixed-rate="1000"/>
    </file:inbound-channel-adapter>

    <!-- 2) move the file to processing and setup header -->
    <file:outbound-gateway request-channel="batchFilesTelcel" reply-channel="batchFilesTelcelProc"
                           directory="#{baseDirectoryTelcelPC}/processing" delete-source-files="true"/>
    <int:service-activator input-channel="batchFilesTelcelProc" output-channel="batchFilesHeaderCP"
                           ref="telcelHeaderSetupTask" method="execute"/>


    <int:service-activator input-channel="batchFilesHeaderCP" output-channel="batchFilesTran" ref="batchTransformerTelcelTask"
                           method="execute" />

    <bean id="batchTransformerTelcelTask"
          class="mx.com.telcel.core.services.dataimport.task.ImpexPostalCodeTransformerTask"
          init-method="initConvertersMap">
        <property name="fieldSeparator" value="|"/>
        <property name="encoding" value="UTF-8"/>
        <property name="linesToSkip" value="1"/>
        <property name="cleanupHelper" ref="cleanupHelper"/>
    </bean>


    <bean id="telcelHeaderSetupTask"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
        <property name="catalog" value="telcelProductCatalog"/>
        <property name="net" value="false"/>
        <property name="storeBaseDirectory" ref="baseDirectoryTelcelPC"/>
    </bean>

    <bean id="telcelPostalCodesConverterMapping"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
          p:mapping="postalcodes"
          p:converter-ref="telcelPostalCodesConverter"/>

    <bean id="postalcodesImpexHeader" class="java.lang.String">
        <constructor-arg>
            <value># Impex for importing data into $CATALOG$
                $version=Staged
                $productCatalog = telcelProductCatalog
            </value>
        </constructor-arg>
    </bean>

    <bean id="telcelPostalCodesConverter"
          class="mx.com.telcel.core.services.dataimport.converter.impl.TelcelDefaultImpexConverter">
        <property name="header">
            <value>#{postalcodesImpexHeader}
                INSERT_UPDATE CodigosPostalesTelcel; region(code)[unique = true]; estado(isocode); ciudad; municipio; codigo[unique = true]; colonia[unique = true]; cvePoblacion; tipoDeAsentamiento[unique = true]; cveBES ; isoCodeSAP
            </value>
        </property>
        <property name="impexRow">
            <value>;{+0};{2};{5};{6};{7};{8};{9};{11};{10};{3};</value>
        </property>
    </bean>


</beans>
